# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
     tags:
      - v*

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build

    - name: Publish package
      if: "!startsWith(github.ref_name, 'v-test-')"
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish package Test
      if: "startsWith(github.ref_name, 'v-test-')"
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TEST_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/


  gh-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: debug
        run: |
          echo "${{ contains(github.ref_name, 'dev') }}"
      - name: Release
        uses: softprops/action-gh-release@v1
        # if: "!startsWith(github.ref_name, 'v-test-')"
        with:
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'dev') }}
